// Generated by CoffeeScript 1.10.0
(function() {
  var ProductController,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  angular.module('app').controller('productCtrl', ProductController = (function() {
    ProductController.$inject = ['$scope', '$http', '$log', '$routeParams', '$mdToast', 'cart', 'server', 'debug'];

    function ProductController(scope, http, log, routeParams, mdToast, cart, server, debug) {
      var url;
      this.scope = scope;
      this.http = http;
      this.log = log;
      this.routeParams = routeParams;
      this.mdToast = mdToast;
      this.cart = cart;
      this.server = server;
      this.debug = debug;
      this.addToCart = bind(this.addToCart, this);
      this.scope.products = [];
      if (this.debug.debug === true) {
        this.debug.productPush(this.scope.products);
      } else {
        if (this.routeParams.categoryId > '0') {
          url = 'http://' + this.server.serverIp + ':' + this.server.port + '/products/search/findByProductCategoryId?productCategoryId=' + this.routeParams.categoryId;
          this.log.debug('Preform GET request for products with url: ' + url);
          this.http.get(url).success((function(_this) {
            return function(response) {
              var i, item, len, ref, results;
              _this.log.debug('Response of GET request: ');
              _this.log.debug(response);
              ref = response._embedded.products;
              results = [];
              for (i = 0, len = ref.length; i < len; i++) {
                item = ref[i];
                results.push(_this.scope.products.push(item));
              }
              return results;
            };
          })(this));
        }
      }
      angular.extend(this.scope, {
        addToCart: this.addToCart
      });
    }

    ProductController.prototype.addToCart = function(item) {
      var i, len, product, ref, toast;
      toast = this.mdToast.simple().content('Product added: ' + item.name).hideDelay(500).position("top right");
      this.mdToast.show(toast);
      ref = this.cart.products.items;
      for (i = 0, len = ref.length; i < len; i++) {
        product = ref[i];
        if (product.productId === item.productId) {
          product.amount++;
          return;
        }
      }
      return this.cart.products.items.push({
        orderId: '',
        productId: item.productId,
        name: item.name,
        amount: 1,
        price: item.price
      });
    };

    return ProductController;

  })());

}).call(this);

//# sourceMappingURL=products.js.map
